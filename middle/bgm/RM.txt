front html css java스크립트

디바이스의 환경이 다양화되서 html5.0 버전이 나옴 2014
elements : 태그와 내용이 쎃여있는거 

html 표준화 그룹
W3C(World Wide Web Consortium)
WHATWG(Web Hypertext Application Technology Working Group)

(자바스크립트)jQuery -> 프레임워크 라이브러리 모아놓은거 

html5 css javascript

백엔드
jsp & servlet
netasp #c
app-php

자바스크립트 - node.js

html의 주요기능
멀티미디어
위치정보
웹 데이터베이스 

html5 문서 구조

DOCTYPE 문서 선언부 ->HTML 버전 확인
html - elements의 모음 
<head> 영역과 <body> 영역으로 나눠져있음 

head 웹문서의 상세정보를 넣어줌 -> 이기기의 볼수 있는창 정의 , 작성자 누구인지, 핵심 키워드가 뭔지, 스타일은 뭔지, 전체적인 웹 문서의 상세정보를 넣음
body 실제적으로 브라우저의 내용창에 보여주는 것, 보여주고 싶은 내용을 적음

html은 계층적인 구조를 가진다! (DOM) 형 구조 

	DOC 
	HTML 
HEAD    BODY

HTML은 엘리먼트의 모임이다 그안에 헤드와 바디가 있다 DOM형 구조이다
헤드는 문서의 상세정보 바디는 실제 브라우저에 보여지는 부분
여기까지 PPT 6쪽 

meta 문자 인코딩 utf-8 이걸 많이씀 유니코드 
문자가 틀리면 출력이 꺠짐 
<title> 태그 페이지 제목 
index.html -> 시작페이지 

<h1> : 헤딩 태그 <h1> ~ <h6> 까지 있음 숫자 작을 수록 크고 진해짐
< > : 태그 < > 시작태그 </ > 종료태그 태그는 쌍으로 이워져 있다
element 형식: <tag 속성="속성값"> 내용 </tag> 이런 구성을 element 라고 한다 엘리먼트

html 문서는 head와 body로 구성 최상위 태그로 전체 웹 문서의 시작과 끝을 지정
head태그는 부가적인 정보를 지정 상세정보같은거 실제로 표시되지는 않음 하위에 title, meta, link(외부에 있는 내용 연결), style(css), script(js) 등을 포함
!!! head에 속하지 않는 태그는? 이렇게 물을 수 있데 꼭 외워!!! 
meta태그 인코딩 작성자가 누구인지 정보를 알려줌 meta태그는 안에 내용이 없어 종료태그가 없다!
title태그 웹 문서의 제목을 지정하며 브라우저 창 위쪽 타이틀바 영역 표시
body태그 웹 문서의 브라우저에 표시되는 내용

빈 태그(empty tag) : 속성과 속성값은 갖을 수 있지만 내용은 갖지 않는 태그
내용이 없는 태그는 종료 태그가 없다 
ex) meta, hr, br, img, area, input !!! 이거 시험에 나올 수 있음 무조건 외우기 !!!


자주 쓰이는 글자 태그
<h> 제목 글자 태그 
<i> 기울인 글자 태그
<b> 굵은 글자 태그
<mark> 마크 태그 : 태그 내용을 시각적(다른 색상)으로 강조하여 표시
<p> 문단 태그 : 태그 내용을 묶어 하나의 문단으로 표시 문단 앞뒤에 줄바꿈 자동으로 이뤄짐
<br/> 줄바꿈 태그: 태그 내용 사이의 물리적인 줄 바꿈(break)을 지시 
<hr/> 수평줄 태그: 창 너비만큼 가로 방향으로 수평줄을 표시 주제 변경 경우처럼 앞뒤 내용을 의미적으로 분리하기 위해 사용

특수문자 : &엔터티; 혹은 &#코드값;
공백 : &nbsp; 혹은 &#160;

특수문자의 시작 & 이거 써야함
특수문자의 종료 ; 이거 써야함

블록태그 <p>, <h1>, <div>, <ul>
자동으로 줄바꿔주는거 밑으로 쭉쭉, 항상 새 라인에서 시작하여 출력

인라인태그 <strong>, <a>, <img>, <span>
줄안바꿔주는거 , 블록 속에 삽입되어 블록의 일부로 출력

목록 태그 !!!
<ol> 순서 목록 태그 - 순서화 목록을 표시
<ul> 비순서 목록 태그 - 비순서화 목록을 표시
<li> 목록 항목 태그 - <ol> 또는 <ul>의 하위 태그로 목록 항목등을 표시

dom 형 트리에서 형재는 + 자식은 >

기억해야할거 + 형재 > 자식 . 클래스 # 아이디 -> css할떄 똑같음 jQuery에서 같음
선택자를 쓸때 이런거 지정해줘야함 

html>body>ul>li*3 이렇게 하면 다 만들어줌 젠코딩 

table태그 tr행 td열 
th는 행안에 제목 열을 표시
td는 표의 실제 내용을 갖는 열을 표시 -> 실제 데이터

관련 사이트: https://emmet.io/  -> 젠코딩 관련 
w3school -> 프로그래밍 관련

정리
1. h1~h6
2. ul+ol>li 
3. table>tr>th+td
4. 글자태그들 i, br, hr  

과제
h1
ul +ol>li
table>tr>th+td
글자태그들 i, br, hr 
title -> 본인이름 
해서 index.html로 저장하기 
emmet 플러그인 시켜서 -> 젠코딩 연습하기 
-> 본인소개에 해당하는 웹문서 작성을하고 index.html 
이 내용을 깃허브에 폴더만들고 -> 호스팅형태에 설정하고 해당하는 인덱스파일을 업로드하기
-> 사이트 주소를 교수님에게 과제란에 보내기 

9월 15일 
-------
1.Semantic 태그 
2.컨테이너 태그 
3.입력양식 태그 
 
Semantic Tag [의미있는 태그]
header[머리말], footer[꼬리말], nav[메뉴],section[주컨첸츠 들어감,형식적 구분],article[내용적 구분],aside[보조] -> 이것도 컨테이너 

Container -> 분류, 안에 있는 엘리먼트들을 담고있는 박스같은거 여러 엘리먼트를 심음, 디자인을할때 분류하기 편하게 구분하게 해줌
container : div, span -> 공간분할 태그 [ 엘리먼트들을 담는 컨테이너의 역할]
div는 블럭 span은 인라인 

MultiMedia Tag -> html5에서 자동 탑재됨
audio, video

입력양식:form, input type=""

홈페이지 레이아웃 구조 [컨테이너] 시멘틱 태그 
header-> 맨상단 컨테이너
nav -> 글로벌 네비게이션 메뉴 컨테이너
왼쪽사이드
오른쪽사이드
섹션 -> 가운데 같은 구역 형식적 구분 영역 
article -> 주요컨텐츠 내용적 구분 영역 
footer -> 맨하단 저작권,주소  컨테이너 

웹의 전체 적은 구조가 필요할떄
작은 컨테이너 <div> <span> 사용
div는 블럭 , span은 인라인

audio 태그 src= url주소 autoplay=자동재생여부 controls=제어기표시
video 태그 src= url주소 autoplay= controls= poster=재생 준비중 표시할이미지

오디오의 source 태그에 여러개의 오디오 파일을 src로 지정하면 
순서대로 검사하면서 지원하는 파일형식을 만나면 더 이상 다음 파일 확인하지 않고 재생

경로
절대경로 (웹에서 사용하지 않음) c드라이브 같은거부터 시작하는거 루트부터 시작
상대경로 현재 문서를 기분으로 경로를 설정해주는거 

. 현재경로 ./a.jpg
.. 상위경로 ex) ../media/wheesung.mp3  

/b.jpg 여기에서 /는 루트를 의미한다!


이미지 관련 태그
<img/> -> 내용이 없어 종료태그가 필요가 없다. 
img src="" 만 있으면 됨 <img src="" /> 이렇게만 하면됨

입력 양식(html) 작동 방식
데이터 전송 방식 jsp로 받은 데이터 처리

입력양식은 form양식 단위로 시작 server 전송 단위임
전송 하는 방식은 get, post 두가지 방식이 있음
get방식은 url에 ? ___ 이렇게 붙어서 감
post방식은 http에 메시지가 포함되어서 보내짐 

처리해주는 프로그램 form태그의 action을 이용해 jsp파일로 값,제어 넘김
input 태그를 이용해 사용자로부터 값을 입력 받음 
입전송타입 submit 리셋타입 reset

action -> 해당하는 프로그램 명 전송위치, 제어를 넘길 jsp파일 
method->전송 방식 

GET 방식 -> 주소에 데이터를 직접 입력해 전달합니다. 디폴트 
POST 방식 -> 별도의 방법을 사용해 데이터를 해당 주소로 전달합니다.

GET-> URL 주소뒤에 파라미터를 붙여서 데이터를 전달합니다
POST->HTTP Request 헤더에 포함시켜서 전송 

요약
1. Semantic Tag : header, nav, section,article, aside, footer [웹 구조]
2. container : div, span [분류]
3. multimedia tag : audio, video
4. 입력양식: form action="파일명" method="get|post"
		  input type="" 
				-type : text,password, checkbox,radio,submit,reset등
				zne-coding으로 코딩하라!

혼합형 
5주차부터 월요일 비대면 수요일 대면수업 


4주차 2020년 9월 22일
---------------------
수업내용
1. css3 : cascading style sheet
2. styling 형식 : 선택자 {속성: 속성값; 속성: 속성값...} 세미콜론 주의!
3. 선택자:*,tag, .(class), #(id), ,(여러개 구분),공백(자손),>(자식), : +(형제), : (상태)
4. 스타일링 삽입: 내부, 외부, 인라인

선택자 *는 all을 의미 
컨테이너에 이름 붙이기: .은 클래스 클래스는 이름 중복가능 #id 이거는 컨테이너의 이름 유니크 해야함 유일 
클래스 중복허용 #id 중복 허용 x
,로 똑같은 내용 구분 > 계층구조, : 상태 
똑같은 스타일링의 css 스타일링의 속성을 지정 했다면 
인라인 -> 내부 -> 외부 순서로 적용됨 

css의 개념 
문서의 구조 html 
문서에서 디자인 부분을 따로 분리한게 css 업무 분담 
css 사용의 이점 : 확장성, 편의성, 재사용성, 생산성

중요!!
선택자 {

}
h1[선택자]{ -> 스타일 속성블록 
	color:blue;
	background[스타일속성]:gray[스타일속성값];  -> 스타일속성선언
}[스타일 속성블록 끝]

반응형웹 -> 디바이스에 맞춰서 보여주는거 css덕분에 가능함 

선택자 유형 
*,tag, .(class), #(id), ,(여러개),공백(자손) ,>(자식), : +(형제), : (상태)

* 전체 선택자 :모든 태그에 스타일 적용
태그 선택자 태그명 : 지정한 이름의 태그에만 스타일 적용 
클래스 선택자 .클래스명 : 지정한 클래스 속성을 갖는 태그에만 스타일 적용
아이디 선택자 #아이디명 : 지정한 아이디 속성을 갖는 태그에만 스타일 적용 

계층적 구조 : 공백은 자손 , > 자식, +형제
#menu li -> 자기 밑에있는 li 전부 포함 자기 가계도 전부 밑
#menu>li -> 자기 한단계 밑에 있는 li만 포함 자기 자식만 
+ 형제는 자기랑 같은 레벨에 있는거 

상태 선택자 선택자:상태조건 : 지정된 특정 상태 조건을 충족하는 태그에만 스타일 적용 
-> ex) 마우스 올려놓았을때 hover 이런거

sans-serif : 끝에 돌출되어 있지 않은 글씨체
serif : 끝에 돌출되어 있는거 ㅇㅇ 


박스모델 -> 여백을 줄때 사용 
width, heigth, margin, border, padding

내용(height, width)
내용과 테두리 사이 안쪽여백(padding)
경계선 두께 테두리(border)
바깥여백(margin)

margin : 20px 전방향
margin : 20px 40px -> 20은 위아래 40은 왼쪽오른쪽 
margin : 20px 30px 40px -> 20은 위, 30은 오왼, 40은 밑
margin : 10px 15px 25px 40px; -> 시계방향 위, 오, 밑, 왼

css 삽입 방법: 1) 인라인, 2)내부 ,3)외부
인라인 : 태그에 바로 style 넣어버리기~ -> style="속성:속성값;.."
내부 스타일 시트: html 태그에 head안에 style해서 넣는거 
외부 스타일 시트 : 파일로 지정해주는거 file명.css 로 저장한 후 링크걸어주는거

우선순위 1.인라인 2.내부 3.외부 

display: inline-block; 그냥 인라인 으로 변경하면 옆으로 가기는 하지만 내용 중심으로 조절되버림 inline-blcok 쓰면 크기에 맞추는 블럭형식+인라인 적용가능
display: block; 밑으로 쭉가는 크기중심 블럭형식 적용
<!-- tag 출력형식 변경 display : inline, block, inline-block-->
<!--.box*5{$$} .은 클래스 div 생략가능 div.box해도됨 {}는 텍스트 $$는 숫자-->

css 주석 /* */ html 주석 <!-- -->

시험 무조건 외우기 !!!! 4주차 2번쨰 영상 
solid 는 실선을 의미

<div> 동의대학교 </div>
div{
	width:100px;
	height:50px;
	border:5px solid red;
	margin:20px 30px;
	padding: 15px;
}

총 크기: 폭, 높이는 얼마가 되는가? 박스의 크기는 얼마인가?
가로 100 , 세로 50, 두께 5, 마진 위밑 20 왼오 30, 패딩 15

폭: 100 + (15 + 5 + 30)*2 -> 양쪽이라 곱하기 2
높이: 50+(20+5+15)*2 

박스 모델을 알아야 한다 !! 

.navi>ul>li:hover{ /*>:자식 :hover(상태); navi 클래스 밑에 ul밑에 li를 hover하면 상태 선택자 */

		}

정리 
1. box model
2. display : inline, block, inline-block
3. 선택자 {속성:속성값;} 
선택자 유형 
*,tag, .(class), #(id), ,공백(자손 여러개), >(자식), : +(형제), : (상태 특정조건일때 발동)

float 스타일속성 왼쪽 오른쪽
foot는 clear(해제)로 사용  

9월 30일 필기
--------
5주차 수업내용
1.배치(Layout) : display, float, position, visibility, overflow

2. position : static, relative, absolute, fixed, sticky

3. Framework 사용 : CDN(Content Delivery Network), framework download 후 link [파일 받은 후 외부스타일 삽입]

4. w3.css, Font Awesome [아이콘] 사용

position 은 기본적으로 static 정적 [top, left, right, bottom]
relative 는 해당하는 엘리먼트들을 가지고 상대적인 포지션을 잡아주는것 
absolute 는 그 엘리먼트에 해당하는 내용이 상위에 해당하는 글을 기반으로 절대적으로 왼오위밑 포지션 잡음
fixed 는 브라우저에 해당하는 윈도우에 해당하는 내용을 가지고 상하좌우 
sticky 는 마우스 스크롤 할때 따라서 움직이는거 

w3.css 스타일링 font awesome -> 아이콘 

교수님 깃허브 : github.com/sense64/web01/

배치 : css3로 html 태그가 출력되는 위치 지정 (Layout : position)
html 태그는 웹 페이지에 작성된 순서와 달리 배치 가능 
배치 기능의 css3 프로퍼티들 
display
position
left, right, top, bottom
float
z-index
visibility
overflow -> 컨텐츠가 넘칠때 

div는 안에 내용[엘리먼트]가 없어도 블럭형식으로 나오지만
span같은 인라인형식은 안에 내용[엘리먼트]가 없으면 아예 출력이 되지 않는다!!!
인라인 형식은 width와 height 같은 옵션이 먹지 않기 떄문 !!!! 놀랍다 !!!  

표현 효과 스카일 속성
display : 박스모델 표시 유형값 block, inline, inline-blcok
visibility 숨김여부 엘리먼트 공간 표시 여부를 지정
opacity: 투명도 엘리먼트 공간의 투명도를 지정
box-shadow : x축간격 y축간격 번짐크기 그림자크기 그림자색상 박스 모델 영역에 그림자 효과를 지정
ex) 4px 4px 10px 6px orange 

화면 배치 스타일 속성 
position 위치 지정 방식 ex) absolute, fixed, static, relative 공간 위치를 지정 
left 
right
top
bottom
상하좌우 적용할려면 디폴트로 지정된 position: static을 바꿔줘야함
relative로 다른 엘리먼트랑 비교해서 상대적으로 잡아주는거 사용하면됨 
왼쪽 상단이 0,0

/*디폴트로 static되어 있는거 풀어줘야 상하좌우 옵션 적용됨 */
			/*relative 다른 엘리먼트를 기준으로 상대인 위치를 잡아줌 */
			/*absolute 상위에 있는 컨테이너[자기가 속한데]의 포지션을 절대적으로 해서 위치를 잡아줌*/
			/*fixed 윈도우에 해당하는 브라우저를 기준으로 위아래 지정해주는거 전체적인 브라우저에 해당하는 내용의 위치를 잡아줌 상위 컨테이너 기준이 아님 브라우저 창기준 ㅇㅇ*/
			/*지금 바디안에 컨에이너안에 박스가 있는 형태임  박스의 상위는 컨테이너의 상위는 바디*/
			/*sticky 마우스 휠로 페이지 내려도 해당 위치에 고정되어 따라옴 웹툰 옆에있는 리모콘 같은거 ㅇㅇ*/
			/*static 디폴트값 나열된 순서대로 잡아줌 */
			
			
float 박스 부유
left, right 
clear 박스정렬 해제 원래대로 바꿔줄떄 사용 float 해제 
overflow : 컨테이너안에 내용들이 넘쳐서 밖으로 나올때 visible : 넘쳐도 그냥 다 보여줌 , hidden : 넘치는거 안보이게 해줌 , scroll : 스크롤이 항상 보이게 하는거 , auto: 넘치지 않을떄는 스크롤 안보이다가 컨텐츠가 넘치면 보이게

css 미리 만들어놓은 프레임워크(라이브러리 모아놓은거)

css 삽입해주는 방법 인라인, 내부, 외부 
기존에 있는 라이브러리/프레임워크 를 가져오는 방법!?
cdn 방법과 외부파일로 저장해서 링크 걸어주는 방법 이렇게 2가지가 있다!!

cdn 방법은 네트워크를 통해 컨텐츠를 받아오는 방법임 
아이콘은 cdn w3.css는 외부파일로 할꺼임 

수평바 안의 각각의 항목들을 아이템이라고 함 

누르면 밑으로 나오는거 dropdown-hover , click


w3.css 사용한거 
color, table, image, input, layout, navigation
컨테이너 잡아주기 w3-container w3-margin [top, bottom]

오늘 배운거 정리
배치 position 암기하기  
w3.css 프레임워크 사용하기
기존에 만들어진거 사용할려면 cdn 방법과 외부파일 링크방법 기억하기!!

6주차 2020-10-07
---------
6주차 수업내용

1. 자바스크립트 시작 : 자바스크립트 란, 자바스크립트 특징, 자바스크립트의 미래
2. 자바스크립트의 삽입: inline JS, internal JS, external JS
3. 변수 : 데이터 type, 변수선언, 식별자
4. JS결과 출력 : console.log로 출력, html element로 출력, HTML output, window.alert()대화상자
5. 다양한 프로그램 작성:workbook 해결

자바스크립트는 사용자와 동적인 상호작용을 위해 사용됨 [유효성 검증 같은거]
자바스크립트는 인터프리터 언어, 문서안에 코드가 들어가있는것을 스크립트 
변수를 선언할떄는 데이터 타입을 선언하지 않음[다이나믹 타이핑] 
node.js 같은거 

html 안에 삽입함 어디에 삽입하냐 따라 inline, internal, external로 나눠짐
인라인은 태그, 인터널은 내부[헤더,바디 다 가능],익스터널[파일로 만들어서 연결해서 쓰는거]
  
자바 스크립트는 변수 타입을 적지 않음 var 또는 let으로 선언 var a;
값이 할당될 떄 변수 타입이 결정됨, 변수명 위의 예로든 var a; 에서는 a가 식별자임 식별자라고 불림

js결과를 출력하는 방법은 4가지가 있음
consol.log로 출력, html element에 출력, HTML output, window.alert() 대화상자로 출력

html element는 innerHTML이라는 속성을 이용해서 출력함
HTML output은 문서를 만드는 방법임 document.write()를 이용

c,java -> 컴파일언어
js -> 스크립트 언어 
스크립트는 브라우저에서 번역 표준은 ecmaScript 이키마스크립트5,6 이 인기있는 표준

자바스크립트란?(동적) -> 웹 페이지에 좀더 동적인 효과를 추가하기 위해 사용하는 프로그래밍 언어
html은 웹 문서의 뼈대 정적 자바스크립트는 동적

자바언어 
파일을 만들어서 한꺼번에 컴파일해서 처리 
자바 가상 머신에서 실행
별도의 소스 파일에 작성
변수 타입을 반드시 선언해야 함 -> static typing [변수를 선언할떄 타입 반드시 선언]
자바스크립트
[브라우저]에서 소스 코드를 번역 인터프리터 언어! 
브라우저 위에서 실행
html 파일 안에 삽입 가능, 다른 파일로도 가능 
변수의 타입을 선언하지 않아도 사용 가능 -> dynamic typing[ 값을 할당할 때 결정, 실행할때 타입 결정]

자바스크립트의 특징
-인터프리터 언어 [기억]
-동적 타이핑(dynamic typing) [기억]
-구조적 프로그래밍 지원 [기억]
-객체 기반 
-함수형 프로그래밍 지원 

스크립트는 헤드, 바디 상관없음 실행 순서는 위에서부터 아래로 
node.js 백엔드 추천 
json -> 데이터를 전송해주는 형태 자바스크립트 객체 표기법 
jquery -> 자바스크립트 라이브러리
React -> 자바스크립트에서 사용자 인터페이스를 만들기 위한 라이브러리
typeScript -> 다이나믹 타이핑은 문제 발생하기 쉬움 그래서 스테틱으로 바꿔줌

자바스크립트 위치
1. 내부 스크립트 [html 안에 적음]
2. 외부 스크립트 [파일로 저장해서 불러들임 확장자 .js로 되어있음]
3. 인라인 스크립트 [태그안에 스크립트 넣는거]

내부 스크립트-> head body등에 html문서안에 작성  <script> </script> 태그에 필요한 자바 스크립트 작성 
외부 스크립트-> *.js 내부스크립트는 보안에 취약 외부는 페이지 소스보기해도 볼수 없어서 보안에 좋음  기본형식 <script type="text/script" src="스크립트 파일 경로"><script>
외부 스크립트 장점 : 1. 소스를 감출수있다 2.유지/관리가 쉽다 3.라이브러리를 지원한다.

외부스크립트 중요 외우기!!!!!!

인라인 스크립트 -> 태그안에 적음 

자바스크립트에서의 주석 // 한줄 주석 /* 여러줄 주석 */
자바스크립트는 대소문자를 구분한다. var이랑 VAR이랑은 다르다! 
자바스크립트는 블럭으로 처리 { }, 문장의 끝은 ;[세미콜론]으로 구별
따음표안에 따음표 사용할떄는 큰 따음표와 작은 따음표 정확히 구별해서 사용하기! onclick="alert('내용')"; 이런식으로 해야함 
"alert(" ")"; 이렇게하면 끝부분이 "alert("  |벽|  ")" 이렇데 되버림 두개로 쪼개지는것


JS결과 출력 [기억하기 중요 기억해함 !!!!!!]

html element로 출력 -> innerHTML
HTML output -> html 문서가 새롭게 만들어지는건 document타입이라고함 document.write()
웹페이지 하나를 document라고함 document를 write하라 하기 떄문에 html문서가 생기는것 
indow.alert() 메시지박스같은 대화상자
console.log로 출력 -> 브라우저 콘솔에대가 출력을 해주는 방법 

실습
1. 삽입 방법 js 위치: 인라인, 내부, 외부
2. 문장: 대문자 소문자 구분 , 블럭:{} , 주석: //  /* */ , 따움표 " ' ' " 
3. 출력 : innerHTML[엘리먼트 안에 넣어 출력], document.write()[웹페이지 새롭게 만들기], window.alert()[메시지박스 만들기], consol.log()[브라우저 콘솔에 출력]
자바스크립트 위치, 문장의 특징, 출력
<>엘리먼트</> -> 엘리먼트는 태그가 아니라 태그 사이에 있는거 ㅇㅇ 
4. 
5. 
 
 
 
변수 , 데이터 타입 

변수 선언 방법 -> var 변수명 ; 또는 (ES6 이상) let 변수명 ;
상수 선언 -> const 
변수 선언할 때 자료형은 입력안함 -> 다이나믹 타이핑 이거 불편하면 타입 스크립트 

var a; 선언 
a=10; 값 할당/기억 

지역(로컬) 변수와 전역 변수 

예전에 쓰던 var 버전 
전역 변수 -> 스크립트 전역에서 사용할 수 있는 변수, 블럭 밖에서 var 없이 변수 선언 , 스크립트 전체에서 유효 global variable
지역(로컬) 변수 -> 특정 함수 안에서만 사용할 수 있는 변수, 변수 선언할 때 var 붙임 , 블럭내에서만 유효 local variable 

let은 블럭 박에 있으면 전역 변수, 블럭안에 있으면 지역(로컬)변수다.  

로컬은 var 전역은 var 없이 !! 

  
실습
1. 변수가 통용되는 범위에 따라 전역, 지역으로 나누어 진다
2. 전역은 블럭 밖에서 let 변수명;  스크립트 전체에서 통용되는 변수  
3. 지역은 블럭 내에서 let 변수명;  블럭내에서 통용되는 변수 

20
30
10
홍길동 
70
에러 

const : 상수(변하지 않는 값) 선언 
const pi =3.141592; 
pi=30; 이런식으로 선언후 값 바꾸기 불가!! 값의 이름을 상수명으로 지정해준것 변수하고는 다르다! 
변수는 중간에 기존값 바꾸기 가능 


정리 
실습
1. 삽입 방법 js 위치: 인라인, 내부, 외부
2. 문장: 대문자 소문자 구분 , 블럭:{} , 주석: //  /* */ , 따움표 " ' ' " 
3. 출력 : innerHTML[엘리먼트 안에 넣어 출력], document.write()[웹페이지 새롭게 만들기], window.alert()[메시지박스 만들기], consol.log()[브라우저 콘솔에 출력]
자바스크립트 위치, 문장의 특징, 출력
<>엘리먼트</> -> 엘리먼트는 태그가 아니라 태그 사이에 있는거 ㅇㅇ 

실습
1. 변수가 통용되는 범위에 따라 전역, 지역으로 나누어 진다
2. 전역은 블럭 밖에서 let 변수명;  스크립트 전체에서 통용되는 변수  
3. 지역은 블럭 내에서 let 변수명;  블럭내에서 통용되는 변수 


10월 14일 7주차 대면
-----------------------------
경고창 alert 
확인창 confirm 확인 or 취소 버튼나오는 창 확인,취소 누르면 변수에 값이 들어ㅏㅁ 
프롬프트 prompt() 사용자로부터 입력받을 수 있음 -> 문자열로 입력받음 숫자로 바꿀려면 parseInt 로 형변환 해줘야함 
 

다이나믹 타이핑 변수 타입 선언 x 
타입 자바스크립트 

var let 차이 let 사용하는게 더 좋음 타입 선언하기 

자료형 -> 자바스크립트 데이터 타입은 선언하지 않음 넣는거에 따라 달라짐 
수치형(number)
문자열
부울형
객체형
undefined 

타입 확인할떄 typeof() 사용 


10월 16일 7주차 인강
--------------------------------------

수치형 (number)
문자열 (string)
부울형 (boolean) 
객체형 (object)
undefined 

객체 object -> 사물의 속성과 동작을 묶어서 표현하는 기법 
속성 property -> 데이터
동작 method -> 기능 

ex) 값과: 속성 이렇게 이뤄져 있음 자동차로 예로 들면 메이커:현대, 모델:제네시스, 색상: 검은색 이렇게 ㅇㅇ 
let myCar={moder:"bmz", color:"red", hp:100};
밸류 값에 메소드를 넣는것도 가능  fullname:function(){ 내용 }
this -> 현재 객체 자기 자신 

연산자 
산술 연산자 : 수학에서 사용하는 숫자 관련 연산자 
대입 연산자 : 변수에 특정 값을 저장할 때 사용하는 연산자 
비교 연산자 : 두가지 수나 문자열을 비교할 때 사용하는 연산자 
논리 연산자 : 참과 거짓을 구별하는 연산자 

1) 산술연산자 
/ 나누기 -> 나누기한 몫 
% 나머지 -> 나누기한 나머지 

증가 연산자
++x -> 자기 자신을 하나 더해놓고 다른일을 함 
x++ -> 다 하고나서 자기 자신을 더함 
 
--------------------------------------
8주차 수업 (실시간)


		필기 제어문 : 프로그램 흐름을 변경 1. 조건문 2.반복문 3.break, continue
		1. 단순if, ifelse, 중첩if, switch case
		2. for문, while문 
		3. break, continue 

		수행해야할 명령문이 여러개면 블럭해줘야함 {} 집합기호 
		if(조건){
	
		}else if(조건2){
	
		}else{
	
		}
		
이런 구조 

eval() 스트링을 입력받아 계산하고 숫자(number)로 리턴함 


  


